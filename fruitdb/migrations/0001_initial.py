# Generated by Django 3.1.1 on 2022-04-05 13:41

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=15, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('target', models.CharField(choices=[('ANDROID', 'Android'), ('IOS', 'iOS')], max_length=15, verbose_name='Target')),
                ('is_recent', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('firebase_token', models.TextField()),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', '남성'), ('Female', '여성')], max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('is_android', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_jmf_auth', models.BooleanField(default=True)),
                ('is_jmf_join', models.BooleanField(default=False)),
                ('is_genetic', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fruit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
                ('if_id', models.CharField(max_length=20)),
                ('variety', models.TextField(blank=True)),
                ('efficacy', models.TextField(blank=True)),
                ('season', models.CharField(blank=True, max_length=30)),
                ('storage_method', models.TextField(blank=True)),
                ('selection_method', models.TextField(blank=True)),
                ('infant', models.BooleanField(default=False)),
                ('pet', models.BooleanField(default=False)),
                ('is_circulated', models.BooleanField(default=False)),
                ('calorie', models.FloatField(default=0)),
                ('total_sugar', models.FloatField(default=0)),
                ('potassium', models.FloatField(default=0)),
                ('vitamin_c', models.FloatField(default=0)),
                ('scientific_name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='fruit')),
                ('detail_image', models.ImageField(blank=True, null=True, upload_to='fruit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Matrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fm', models.FileField(blank=True, upload_to='')),
                ('mt', models.FileField(blank=True, upload_to='')),
                ('ft', models.FileField(blank=True, upload_to='')),
                ('version', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Metabolite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=10)),
                ('if_id', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pubmed_id', models.CharField(db_index=True, max_length=100, verbose_name='PubMed ID')),
                ('journal', models.CharField(blank=True, max_length=200, null=True, verbose_name='Journal')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Title')),
                ('author', models.TextField(blank=True, null=True, verbose_name='Author')),
                ('author_info', models.TextField(blank=True, null=True, verbose_name='Author Information')),
                ('abstract', models.TextField(blank=True, null=True, verbose_name='Abstract Text')),
                ('copyright', models.TextField(blank=True, null=True, verbose_name='Copyright')),
                ('ids', models.CharField(max_length=200, null=True, verbose_name='IDs')),
                ('year_month', models.CharField(max_length=200, null=True, verbose_name='Year & Month')),
                ('page', models.CharField(max_length=200, null=True, verbose_name='Page')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceAPILog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('username', models.CharField(max_length=50)),
                ('api', models.CharField(max_length=50)),
                ('method', models.CharField(max_length=10)),
                ('status', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_image', models.FileField(blank=True, upload_to='default_image')),
                ('detail_default_image', models.FileField(blank=True, upload_to='default_image')),
                ('version', models.CharField(max_length=10)),
                ('subscription_animation_text', models.TextField(blank=True)),
                ('survey_animation_text', models.TextField(blank=True)),
                ('signup_animation_text', models.TextField(blank=True)),
                ('subscription_animation_text_detail', models.TextField(blank=True)),
                ('survey_animation_text_detail', models.TextField(blank=True)),
                ('signup_animation_text_detail', models.TextField(blank=True)),
                ('is_fm_detail', models.BooleanField(default=False)),
                ('is_visible_jmf_link', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShippingDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('sno', models.CharField(max_length=15)),
                ('entrance_password', models.CharField(blank=True, default='', max_length=100)),
                ('request', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('bs', models.CharField(max_length=10)),
                ('bp', models.CharField(max_length=10)),
                ('sm', models.CharField(max_length=10)),
                ('sex', models.CharField(choices=[('Male', '남성'), ('Female', '여성')], max_length=10, null=True)),
                ('username', models.CharField(max_length=30, null=True)),
                ('birth_date', models.DateField(blank=True, default='2000-01-01', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_all', models.BooleanField(default=False)),
                ('lifelog', models.JSONField(default=None, null=True)),
                ('genetic', models.JSONField(default=None, null=True)),
                ('cal_traits', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('allergies', models.ManyToManyField(related_name='allergies', to='fruitdb.Fruit')),
            ],
            options={
                'ordering': ('-is_all', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_info', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ko', models.CharField(max_length=30)),
                ('name_en', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('예방질병', '예방질병'), ('신체 및 건강기록 정보', '신체 및 건강기록 정보'), ('생활목표', '생활목표')], default='생활목표', max_length=30)),
                ('image', models.FileField(blank=True, null=True, upload_to='trait_image')),
                ('active_image', models.FileField(blank=True, null=True, upload_to='trait_image')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyFruit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('fruit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.fruit', verbose_name='fruit_id')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.survey', verbose_name='survey_id')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='survey',
            name='fruits',
            field=models.ManyToManyField(related_name='fruits', through='fruitdb.SurveyFruit', to='fruitdb.Fruit'),
        ),
        migrations.AddField(
            model_name='survey',
            name='traits',
            field=models.ManyToManyField(related_name='traits', to='fruitdb.Trait'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.CharField(max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fruitdb.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.TextField(blank=True)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('image', models.TextField(blank=True)),
                ('header', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('fruit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fruitdb.fruit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaboliteTraitPmid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmids', models.TextField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('metabolite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fruitdb.metabolite')),
                ('trait', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fruitdb.trait')),
            ],
        ),
        migrations.CreateModel(
            name='MetaboliteTrait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('metabolite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.metabolite', verbose_name='metabolite_id')),
                ('trait', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.trait', verbose_name='trait_id')),
            ],
            options={
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='FruitTrait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('fruit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.fruit', verbose_name='fruit_id')),
                ('trait', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.trait', verbose_name='trait_id')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='FruitMetaboliteContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.FloatField()),
                ('fruit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.fruit', verbose_name='fruit_id')),
                ('metabolite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruitdb.metabolite', verbose_name='metabolite_id')),
            ],
        ),
        migrations.CreateModel(
            name='EventAPILog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_code', models.CharField(max_length=30)),
                ('event_text', models.TextField(blank=True)),
                ('phone', models.CharField(max_length=30)),
                ('is_success', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fruitdb.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
